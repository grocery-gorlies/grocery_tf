name: AWS example workflow
on:
  push:
    branches: [ 'main' ]
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION : us-east-1

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    -   name: Git clone the repository
        uses: actions/checkout@v4
    -   name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}

## https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
## Sample workflow to access AWS resources when workflow is tied to branch
## The workflow Creates static website using aws s3
#name: AWS example workflow
#on:
#  push
#env:
#  BUCKET_NAME : "BUCKET-NAME"
#  AWS_REGION : "AWS-REGION"
## permission can be added at job level or workflow level
#permissions:
#  id-token: write   # This is required for requesting the JWT
#  contents: read    # This is required for actions/checkout
#jobs:
#  S3PackageUpload:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Git clone the repository
#        uses: actions/checkout@v4
#      - name: configure aws credentials
#        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
#        with:
#          role-to-assume: ROLE-TO-ASSUME
#          role-session-name: samplerolesession
#          aws-region: ${{ env.AWS_REGION }}
#      # Upload a file to AWS s3
#      - name: Copy index.html to s3
#        run: |
#          aws s3 cp ./index.html s3://${{ env.BUCKET_NAME }}/
